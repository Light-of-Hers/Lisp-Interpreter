(define (foldr op init lst) 
    (if (null? lst) 
        init
        (op (car lst) (foldr op init (cdr lst)))))
(define (foldl op init lst) 
    (define (iter acc lst) 
        (if (null? lst) 
            acc
            (iter (op acc (car lst)) (cdr lst))))
    (iter init lst))
(define (map proc . lsts) 
    (define (single-map proc lst) 
        (if (null? lst) 
            '()
            (cons (proc (car lst)) (single-map proc (cdr lst)))))
    (define (iter lsts)
        (if (null? (car lsts)) 
            '()
            (cons (apply proc (single-map car lsts)) (iter (single-map cdr lsts)))))
    (iter lsts))